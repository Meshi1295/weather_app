{"ast":null,"code":"var _jsxFileName = \"/home/meshi/Desktop/weather_app/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getData } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const {\n    weatherData\n  } = props;\n  useEffect(() => {\n    props.getData();\n  }, []);\n  console.log(weatherData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weatherData !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Live Weather Condition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://api.openweathermap.org/img/w/${weatherData.weather[0].icon}.png`,\n          alt: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: weatherData.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [parseFloat(weatherData.main.temp - 273.15).toFixed(1), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-street-view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this), weatherData.name, \" | \", weatherData.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature-range\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"min: 25\\xB0C || max: 28\\xB0C || Humidity: 10%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Card;\n\nconst mapStateToProps = state => {\n  return {\n    weatherData: state.weatherData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => dispatch(getData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/meshi/Desktop/weather_app/src/components/Card.js"],"names":["React","useEffect","connect","getData","Card","props","weatherData","console","log","weather","icon","description","parseFloat","main","temp","toFixed","name","sys","country","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACF,OAAN;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,sBACI;AAAA,cACKA,WAAW,KAAK,IAAhB,gBACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAG,wCAAuCA,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBC,IAAK,MAA9E;AAAqF,UAAA,GAAG,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA,kBAAKJ,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBE;AAA5B;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAA,qBAAKC,UAAU,CAACN,WAAW,CAACO,IAAZ,CAAiBC,IAAjB,GAAwB,MAAzB,CAAV,CAA2CC,OAA3C,CAAmD,CAAnD,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAA,kCAAI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAJ,EAA0CT,WAAW,CAACU,IAAtD,SAA+DV,WAAW,CAACW,GAAZ,CAAgBC,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAYI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAiBG;AAlBR;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA9BD;;GAAMd,I;;KAAAA,I;;AAgCN,MAAMe,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHd,IAAAA,WAAW,EAAEc,KAAK,CAACd;AADhB,GAAP;AAGH,CAJD;;AAMA,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHnB,IAAAA,OAAO,EAAE,MAAMmB,QAAQ,CAACnB,OAAO,EAAR;AADpB,GAAP;AAGH,CAJD;;AAKA,eAAeD,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { getData } from '../redux/actions';\n\nconst Card = (props) => {\n    const { weatherData } = props\n\n    useEffect(() => {\n        props.getData()\n    }, []);\n\n    console.log(weatherData);\n    return (\n        <div>\n            {weatherData !== null ? (\n                <div className=\"main\">\n                    <h4>Live Weather Condition</h4>\n                    <div className=\"weather-icon\">\n                        <img src={`https://api.openweathermap.org/img/w/${weatherData.weather[0].icon}.png`} alt='icon' />\n                    </div>\n                    <h3>{weatherData.weather[0].description}</h3>\n                    <div className=\"temperature\">\n                        <h1>{parseFloat(weatherData.main.temp - 273.15).toFixed(1)}&deg;C</h1>\n                    </div>\n                    <div className=\"location\">\n                        <h3><i className=\"fa fa-street-view\"></i>{weatherData.name} | {weatherData.sys.country}</h3>\n                    </div>\n                    <div className=\"temperature-range\">\n                        <h6>min: 25&deg;C || max: 28&deg;C || Humidity: 10%</h6>\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        weatherData: state.weatherData\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getData: () => dispatch(getData())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);"]},"metadata":{},"sourceType":"module"}